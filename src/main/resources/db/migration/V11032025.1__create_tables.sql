create table if not exists users
(
    id       bigint primary key generated by default as identity,
    email    varchar(30) not null,
    name     varchar(30) not null,
    password varchar(80) not null
);

create table if not exists sessions
(
    id      bigint primary key generated by default as identity,
    cookie  varchar(68),
    user_id bigint,
    foreign key (user_id) references users (id)
);

create table if not exists buckets
(
    id             bigint primary key generated by default as identity,
    name           varchar(30) not null unique,
    root_folder_id bigint
);

create table folders
(
    id        bigint primary key generated by default as identity,
    name      text,
    parent_id bigint,
    bucket_id bigint not null,

    unique (id, bucket_id),
    unique (parent_id, name),

    foreign key (parent_id, bucket_id)
        references folders (id, bucket_id)
        on delete cascade
);
create unique index on folders (bucket_id) where parent_id is null;

create table if not exists files_info
(
    id               bigint primary key generated by default as identity,
    capacity         bigint      not null,
    name             varchar(50) not null,
    creation_ts      timestamp   not null,
    last_modified_ts timestamp   not null,
    owner_id         bigint      not null,
    bucket_id        bigint      not null,
    folder_id        bigint      not null,
    foreign key (owner_id) references users (id) on delete cascade,
    foreign key (bucket_id) references buckets (id) on delete cascade,
    foreign key (folder_id) references folders (id) on delete cascade
);

create table if not exists tags
(
    id   bigint primary key generated by default as identity,
    name varchar(30) not null
);

create table if not exists roles
(
    id   bigint primary key generated by default as identity,
    name varchar(30) not null
);

create table if not exists users_roles
(
    user_id bigint,
    role_id bigint,
    primary key (user_id, role_id),
    foreign key (user_id) references users (id),
    foreign key (role_id) references roles (id)
);

create table if not exists files_tags
(
    file_id bigint,
    tag_id  bigint,
    primary key (file_id, tag_id),
    foreign key (file_id) references files_info (id),
    foreign key (tag_id) references tags (id)
);

create table if not exists files_roles_see
(
    file_id bigint,
    role_id bigint,
    primary key (file_id, role_id),
    foreign key (file_id) references files_info (id),
    foreign key (role_id) references roles (id)
);

create table if not exists files_roles_change
(
    file_id bigint,
    role_id bigint,
    primary key (file_id, role_id),
    foreign key (file_id) references files_info (id),
    foreign key (role_id) references roles (id)
);
